# Generated by Django 5.0.3 on 2024-03-18 05:58

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("birth_year", models.SmallIntegerField(blank=True, null=True)),
                ("death_year", models.SmallIntegerField(blank=True, null=True)),
                ("name", models.CharField(max_length=128)),
            ],
            options={
                "db_table": "books_author",
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("download_count", models.IntegerField(blank=True, null=True)),
                ("gutenberg_id", models.IntegerField()),
                ("media_type", models.CharField(max_length=16)),
                ("title", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "books_book",
            },
        ),
        migrations.CreateModel(
            name="BookAuthors",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("book_id", models.IntegerField()),
                ("author_id", models.IntegerField()),
            ],
            options={
                "db_table": "books_book_authors",
            },
        ),
        migrations.CreateModel(
            name="BookBookshelves",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("book_id", models.IntegerField()),
                ("bookshelf_id", models.IntegerField()),
            ],
            options={
                "db_table": "books_book_bookshelves",
            },
        ),
        migrations.CreateModel(
            name="BookLanguages",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("book_id", models.IntegerField()),
                ("language_id", models.IntegerField()),
            ],
            options={
                "db_table": "books_book_languages",
            },
        ),
        migrations.CreateModel(
            name="Bookshelf",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=64)),
            ],
            options={
                "db_table": "books_bookshelf",
            },
        ),
        migrations.CreateModel(
            name="BookSubjects",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("book_id", models.IntegerField()),
                ("subject_id", models.IntegerField()),
            ],
            options={
                "db_table": "books_book_subjects",
            },
        ),
        migrations.CreateModel(
            name="Format",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("mime_type", models.CharField(max_length=32)),
                ("url", models.TextField()),
                ("book_id", models.IntegerField()),
            ],
            options={
                "db_table": "books_format",
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=4)),
            ],
            options={
                "db_table": "books_language",
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
            ],
            options={
                "db_table": "books_subject",
            },
        ),
    ]
